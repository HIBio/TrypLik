[{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"developed likelihood-based approach estimating tryptase copy numbers (specifically numbers α\\alpha alleles, β\\beta alleles β\\beta frameshift alleles) directly whole-genome (preferable) whole-exome sequence data. approach utilizes updated assembly canonical α\\alpha, β\\beta, δ\\delta tryptase alleles, identifies reads map uniquely one alleles. complete workflow implemented package TrypLik.","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"tryptase gene cluster contains four closely spaced paralogous genes chromosome 16p13.3. include TPSAB1 TPSB2, together encode α\\alpha β\\beta tryptase peptides. TPSAB1 encodes two major alleles, α\\alpha β\\betaI, TPSB2’s major alleles β\\betaII β\\betaIII. α\\alpha β\\betaI ∼1%\\sim1\\% diverged 1.21.2 Kbp region, β\\betaI β\\betaII differ just single nucleotide region. α\\alpha alleles thought enzymatically inactive, β\\beta alleles active, specific β\\beta frameshift variant (β\\betaIIIFS^{FS}) inactive. Recent work identified familial inherited syndrome, hereditary alpha tryptasemia (Hα\\alphaT), associated one duplications α\\alpha allele TPSAB1 Lyons et al., 2016. Common phenotypes found Hα\\alphaT patients include systemic venom reactions, pruritis, IBS, reflux, skeletal abnormalities, retained primary dentition anthralgia. also evidence β\\beta duplications deletions (Chollet et al., 2021, Glover et al., 2022), though yet clear reflects copy number variants (CNVs) TPSAB1 CNVs TPSAB1 TPSAB2. Nothing known clinical effects tryptase β\\beta copy number variation. α\\alpha, β\\beta, β\\betaIIIFS^{FS} copy numbers can accurately determined using custom droplet digital PCR (ddPCR) assays (cf. Lyons et al., 2016), much challenging estimate copy numbers standard short-read (e.g. Illumina) sequence data, even high depth coverage. primarily due fact α\\alpha, β\\beta, β\\betaIIIFS^{FS} tryptase alleles similar, exacerbated errors human reference genome assembly (hg38), appears chimeric alleles TPSAB1 TPSB2. addition, published allelic sequences Maun et al., 2019 also appear incorrect. motivated efforts generate consensus assemblies different tryptase alleles (see ).","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"instructions-on-use","dir":"Articles","previous_headings":"","what":"Instructions on use","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"two main parts workflow: First, map reads tryptase consensus sequence count ones map uniquely tryptase α\\alpha, β\\beta, β\\betaIIIFS^{FS} δ\\delta alleles. Second, perform Bayesian likelihood calculations estimate likely copy number count. describe step greater detail .","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"tryptase-read-mapping","dir":"Articles","previous_headings":"Instructions on use","what":"Tryptase read mapping","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"part workflow can broken following components: Subset indexed bam file consider reads mapping tryptase region Convert output back (original) paired-end fastq reads Map raw reads consensus tryptase sequence Remove duplicates Count numbers reads containing specific 30 bp motifs map specifically single tryptase allele different ways go steps:","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"indexing-bam-files","dir":"Articles","previous_headings":"Instructions on use > Tryptase read mapping","what":"Indexing bam files","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"datafile already indexed, recommend using samtools . example, use publicly available high-coverage whole genome sequence data 1000 Genomes Project test case. downloaded file “HG00100.final.cram” https://www.internationalgenome.org/data-portal/sample/HG00100 use example.Indexing subsetting can performed following commands:","code":"samtools index HG00100.final.cram samtools view -b -h HG00100.final.cram chr16:1200000-1300000 > HG00100.tryptase.cram samtools index HG00100.tryptase.cram"},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"converting-indexed-cram-files-to-fastq-reads","dir":"Articles","previous_headings":"Instructions on use > Tryptase read mapping","what":"Converting indexed cram files to fastq reads","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"One possibility uses samtools :","code":"samtools sort -n HG00100.tryptase.cram -o HG00100.tryptase.sorted.cram samtools fastq -1 HG00100.tryptase.R1.fastq -2 HG00100.tryptase.R2.fastq -0 /dev/null -s /dev/null -n HG00100.tryptase.sorted.cram"},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"mapping-reads-to-tryptase-consensus-sequence","dir":"Articles","previous_headings":"Instructions on use > Tryptase read mapping","what":"Mapping reads to tryptase consensus sequence","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":", using tryptase consensus sequence published Maun et al., 2019 winnow reads tryptase region actually map tryptase genes. following command works continuing example: file consensus.fa included package inst/consensus.fa.","code":"bwa mem consensus.fa HG00100.tryptase.R1.fastq HG00100.tryptase.R2.fastq > out.sam"},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"removing-duplicates","dir":"Articles","previous_headings":"Instructions on use > Tryptase read mapping","what":"Removing duplicates","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"generally done using Picard samtools. example using samtools, output written file “temp.sam”.","code":"samtools sort -n out.sam -o out.sorted.sam samtools fixmate -m out.sorted.sam fixmate.sam samtools sort -o positionsort.sam fixmate.sam samtools markdup -r positionsort.sam temp.sam"},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"counting-reads-mapping-to-specific-tryptase-alleles","dir":"Articles","previous_headings":"Instructions on use > Tryptase read mapping","what":"Counting reads mapping to specific tryptase alleles","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"file “count_tryptase.sh” shell script counts numbers reads map specifically different tryptase alleles (see technical details). requires input file called “temp.sam”. Output consists 99 integers summarizing read counts: first four numbers reads mapping uniquely α\\alpha, β\\betaI, β\\betaII β\\betaIII alleles specific 8383 bp region four alleles can distinguished . next two numbers reads map uniquely β\\beta ‘wildtype’ (.e. frameshifted) β\\beta frameshifted sequences final three numbers reads can uniquely mapped α\\alpha, β\\beta, δ\\delta alleles respectively details can found technical details . example sample HG00100 1000 Genomes Project, output “count_tryptase” processing can performed R (provided samtools bwa available) following wrappers","code":"24    0   22    0   26    0   347   316   304 sam_file <- preprocess(\"HG00100.final.cram\") counts <- count_tryptase(sam_file) counts #> [1]  24   0  22   0  26   0 347 316 304"},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"tryptase-copy-number-likelihood-calculations","dir":"Articles","previous_headings":"Instructions on use","what":"Tryptase copy number likelihood calculations","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"last five numbers output “count_tryptase” used input program TrypLik estimate likelihoods different combinations total number α\\alpha alleles, total number β\\beta alleles, total number β\\beta frameshift alleles. method accounts dependence across read counts (caused 2×1502 \\times 150 bp read generally overlapping multiple regions used distinguish alleles) also uses prior information CNV frequencies different populations. Usage WT: number reads mapping β\\beta “wildtype” alleles site frameshift mutation (5th field “count_tryptase” output) FS: number reads mapping β\\beta frameshift alleles site frameshift mutation (6th field “count_tryptase” output) Areads: number reads mapping uniquely α\\alpha alleles relative β\\beta δ\\delta alleles (7th field “count_tryptase” output) Breads: number reads mapping uniquely β\\beta alleles relative α\\alpha δ\\delta alleles (8th field “count_tryptase” output) Dreads: number reads mapping uniquely δ\\delta alleles relative α\\alpha β\\beta alleles (9th field “count_tryptase” output) -pop POP: optional flag specify predominant ancestry test sample. Options include EUR European ancestry, SAS South Asian ancestry, EAS East Asian ancestry AFR African ancestry. default, -pop flag included, European ancestry. Note likelihood calculations assume individuals contain exactly two tryptase δ\\delta alleles. Dreads acts ‘control’ estimate copy numbers. output consists list different α\\alpha, β\\beta β\\beta frameshift allele copy numbers followed combination’s posterior probability. continue example , calculation HG00100 use command Output look like : method estimates HG00100 2α:2β:2δ\\alpha:2\\beta:2\\delta genotype (frameshift alleles) posterior probability 99.89%. R wrapper function provided, takes either single vector values individual arguments","code":"TrypLik WT FS Areads Breads Dreads (-pop POP) TrypLik 26 0 347 316 304 -pop EUR TrypLik(counts) #>   Alpha_count Beta_count Beta_FS_count Posterior_likelihood #> 1           2          2             0              0.99890 #> 2           2          3             0              0.00008 #> 3           3          2             0              0.00082 #> 4           3          3             0              0.00020  # or TrypLik(26, 0, 347, 316, 304, pop = 0)"},{"path":[]},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"de-novo-assemblyalignment","dir":"Articles","previous_headings":"Technical details","what":"de novo assembly/alignment","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"started aligning cDNA sequences 40 bp region near probes used Lyons et al., 2016(Supplementary Figure 3b) ddPCR. sites red fixed differences TPSD1 (TPSAB1+TPSB2), sites yellow can used distinguish α\\alpha, β\\betaI, β\\betaII/β\\betaIII alleles . β\\betaII β\\betaIII alleles distinguishable sites near Lyons et al., 2016 REV primer follows: assumed sequences listed correct invariant different tryptase alleles. used Illumina short read data ‘extend’ allele-specific alignments. Specifically, combined raw reads 30 randomly chosen individuals European ancestry 1000 Genomes Project (high-coverage data generated NYGC) pulled reads matched sequences. expand allele-specific assemblies looking alignments just 5’ 3’ sequences shown , concurrently identify common allele-specific polymorphisms. continued iteratively extend assemblies α\\alpha β\\beta alleles distinguished . Roughly speaking, since Illumina data consisted 150 bp reads, process can continue long fixed difference allelic assemblies every ∼150\\sim 150 bp. extended assemblies across ∼1.1\\sim 1.1 Kbp sequence including coding regions (see Appendix 1). alignments show expected difference α\\alpha β\\beta alleles putative functional mutation. addition, confirm frameshift mutation happens β\\betaIII background (leading inactivated β\\betaIIIFS^{FS} allele), β\\betaI β\\betaII consensus sequences differ just single nucleotide, despite β\\betaI allele (supposed ) exclusive TPSAB1 β\\betaII confined TPSB2. likely reflects paralogous gene conversion tryptase genes evolutionarily recent time scales. tryptase allele assemblies generated differ slightly previously published assemblies, including cDNA sequences, Lyons et al., 2016 tryptase alignment, Maun et al., 2019 tryptase alignment, human reference genome (hg38). believe though Illumina reads highly accurate, can show previous assemblies inconsistent Illumina data multiple individuals.","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"tryptase-cnv-genotyping-from-high-coverage-illumina-reads","dir":"Articles","previous_headings":"","what":"Tryptase CNV genotyping from high-coverage Illumina reads","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"alignment described , identified 1111 different 3030 bp regions reads uniquely mapped α\\alpha, β\\beta, δ\\delta alleles. Using base numbering defined Maun et al., 2019(Data S1) also used accompanying table, correspond following regions: Tallying total number ‘α\\alpha reads’, ‘β\\beta reads’ ‘δ\\delta reads’ (call AA, BB DD respectively) gives us way estimating relative copy numbers α\\alpha, β\\beta δ\\delta alleles. particular, assume individual exactly two copies TPSD1 (.e. copy number variation TPSD1), number α\\alpha β\\beta alleles can estimated 2A/D2A/D 2B/D2B/D respectively. caveats apply: regions independent , since 2×1502 \\times 150 bp paired-end reads generally include multiple regions. leads greater variance otherwise expected estimated allele counts. Even pool individuals true number α\\alpha β\\beta alleles, estimates 2A/D2A/D 2B/D2B/D correlated since denominator. Unknown (unaccounted ) polymorphisms within allelic class can lead misclassified reads. perhaps important analysis non-European ancestry individuals. method assumes CNVs affect entire 11 Kbp test region, though know isn’t true. Chovanec, 2022 report existence σ alleles, appear chimera α\\alpha β\\beta alleles. analyses, alleles estimated partial α\\alpha partial β\\beta, proportional numbers reads mapping canonical allele assembly. suggest using empirically-based approach estimating bias estimates (e.g. estimating E(2AD|actual number α alleles known) E \\bigl( \\frac{2A}{D} |\\ \\textrm{actual number }\\alpha\\textrm{ alleles known} \\bigr) uses orthogonal information true allele counts (e.g. validated ddPCR data). preliminary version described .","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"betaiii-frameshift-mutation","dir":"Articles","previous_headings":"","what":"β\\betaIII frameshift mutation","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"approach described can estimate total copy number tryptase beta alleles, beta alleles inactive due frameshift mutation. parallel, conduct read-counting exercise counts reads uniquely map β\\betaIIIFS^{FS} allele reads map β\\beta alleles: (Note α\\alpha σ\\sigma alleles map either sequences.) observed numbers reads two categories (called FS+ FS-) expected follow binomial distribution probabilities proportional true numbers β\\betaIIIFS^{FS} non-β\\betaIIIFS^{FS}β\\beta alleles. , assumption, β\\betaIIIFS^{FS} alleles occur TPSB2. data = {FS+, FS-}, simple likelihood framework, $$ \\rm{lik} \\bigl(data\\bigr) \\sim Pr \\bigl(genotype\\bigr)\\ Pr \\bigl( data\\ |\\ genotype\\bigr) $$ Suppose example observe 2828 3636 reads supporting β\\betaIIIFS^{FS} non-β\\betaIIIFS^{FS}β\\beta alleles respectively (.e. data = {28,36}\\{28, 36\\}) individual European ancestry estimated tryptase CNV genotype 0α:4β:2δ0\\alpha:4\\beta:2\\delta. Based European 11 KGP data, frequency β\\betaIIIFS^{FS} mutation ∼0.1766\\sim\\!0.1766. , naïve (.e. prior Hardy-Weinberg) probability homozygous β\\betaIIIFS^{FS} genotype (.e. β\\betaIIIFS^{FS} mutations chromosomes) (0.1766)2(0.1766)^2 probability exactly one copy β\\betaIIIFS^{FS} 2(0.1766)(1−0.1766)2(0.1766)(1-0.1766). Assuming estimated tryptase CNV genotype correct, calculate Pr(data|βIIIFSheterozygote)=(6428)(0.25)28(0.75)36, \\textrm{Pr} \\bigl(\\textrm{data}\\ |\\ \\beta\\textrm{III}^{FS}\\, \\textrm{heterozygote}\\bigr) = {64 \\choose 28} (0.25)^{28}(0.75)^{36},\\ \\textrm{} Pr(data|βIIIFShomozygote)=(6428)(0.5)28(0.5)36  \\textrm{Pr} \\bigl(\\textrm{data}\\ |\\ \\beta\\textrm{III}^{FS}\\, \\textrm{homozygote}\\bigr) = {64 \\choose 28} (0.5)^{28} (0.5)^{36} lik(βIIIFShomozygote)∼0.0018922, \\textrm{lik} \\bigl(\\beta\\textrm{III}^{FS}\\, \\textrm{homozygote}\\bigr) \\sim 0.0018922,\\ \\textrm{} lik(βIIIFSheterozygote)∼0.00014354  \\textrm{lik} \\bigl(\\beta\\textrm{III}^{FS}\\, \\textrm{heterozygote}\\bigr) \\sim 0.00014354 Bayesian context, posterior Pr(βIIIFShomozygote)=0.9295\\textrm{Pr} \\bigl(\\beta\\textrm{III}^{FS}\\, \\textrm{homozygote}\\bigr) = 0.9295, conclude individual likely 0α0 \\alpha alleles, 22 active β\\beta alleles 22 inactive β\\betaIIIFS^{FS} alleles.","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"tryptase-cnv-genotyping-revisited-likelihood-framework","dir":"Articles","previous_headings":"","what":"Tryptase CNV genotyping revisited: likelihood framework","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"idealized world 4 caveats described apply, read independent read counts (,B,D)(, B, D) modeled following multinomial distribution conditional sum +B+DA+B+D, probabilities category proportional true copy numbers α\\alphaβ\\beta δ\\delta. employ two modifications model account deviations model assumptions: replace (+B+D)(+B+D) (+B+D)/R(+B+D) / R, “effective number independent read counts”, account caveat #1 reweight multinomial probabilities factors E(2A/D|αcopy number=1)E(2A/D\\ |\\ \\alpha\\ \\textrm{copy number} = 1) E(2B/D|βcopy number=3)/3E(2B/D\\ |\\ \\beta\\ \\textrm{copy number} = 3)\\ /\\ 3 α\\alpha β\\beta copy numbers account unknown structural variants /polymorphisms use empirical data EUR populations 1000 Genomes Project estimate correction factors. First, plotted 2A/D2A/D vs. 2B/D2B/D 503503 samples:  source data available R session tryptase_1KG() focus dots colored green, estimated tryptase genotype 1α:3β:2δ1\\alpha:3\\beta:2\\delta. average values 2A/D2A/D 2B/D2B/D 1.061.06 3.133.13 respectively, means relatively insensitive inclusion/exclusion specific points periphery central mass. addition, note Var(2A/D)=0.0263Var(2B/D)=0.1286r2(2A/D,2B/D)=0.1953 \\begin{eqnarray}  \\textrm{Var}(2A/D) &=& 0.0263 \\\\  \\textrm{Var}(2B/D) &=& 0.1286 \\\\  r^2 (2A/D, 2B/D) &=& 0.1953 \\\\ \\end{eqnarray} ran simulations different values R (conditional observed AA, BB DD values) heuristically find value , average, produces correlation variances similar observed. settled R=2.75R = 2.75, caveat estimation process entirely qualitative. note though RR approximately equal number 3030 bp informative regions covered average 2×1502\\times 150 bp read pair target tryptase region. example process, suppose observed data {,B,D}={192,600,290}\\{, B, D\\} = \\{192, 600, 290\\} want estimate probability observing data given true genotype 1α:4β1\\alpha:4\\beta. , 2A/D=1.324,2B/D=4.1382A/D = 1.324, 2B/D = 4.138, ’effective number independent reads (192+600+290)/2.75≈393(192+600+290)/2.75 \\approx 393. , estimate probability genotype 1α:3β:2δ1\\alpha:3\\beta:2\\delta, example, calculate Pr(2A/D≈1.324&&2B/D≈4.138|true genotype 1α:3β:2δ)≈Pr(2A/D≈1.324&&2B/D≈4.138|393 independent reads simulated amultinomial distribution relative probabilities 1.06,3.13 2 α,β, δ reads respectively) \\begin{align} &\\textrm{Pr}\\left(2A/D \\approx 1.324\\ \\&\\&\\ 2B/D \\approx 4.138\\ |\\ \\textrm{true genotype } 1\\alpha:3\\beta:2\\delta\\right) \\approx \\\\ &\\textrm{Pr}\\left(2A/D \\approx 1.324\\ \\&\\&\\ 2B/D \\approx 4.138\\ |\\ 393 \\textrm{ independent reads simulated }\\right. \\\\ &\\textrm{multinomial distribution relative probabilities } 1.06, 3.13 \\textrm{ } 2 \\textrm{ } \\alpha, \\beta, \\\\ &\\left.\\textrm{ } \\delta \\textrm{ reads respectively}\\right) \\end{align}  actually approximate likelihoods; operationally, 2A/D≈1.3242A/D \\approx 1.324 estimated probability simulated 2A/D2A/D (0.99×1.324)(0.99\\times1.324) (1.01×1.324)(1.01\\times1.324). calculate posterior probabilities, still need prior estimate population-level genotype frequencies. element circularity since ultimately estimating genotypes (go population-level genotype frequency estimates). Ideally independent way assessing population frequencies (e.g. widespread ddPCR), absence obtained crude prior estimates (see Table 1 ) qualitative assessments figures like Figure 1. Continuing example (assuming European ancestry), estimate lik(1α:3β:2δ)∼Pr(1α:3β:2δ)×Pr(2A/D≈1.324&&2B/D≈4.138|genotype=1α:3β:2δ)=0.434×0.0002521lik(1α:4β:2δ)∼Pr(1α:4β:2δ)×Pr(2A/D≈1.324&&2B/D≈4.138|genotype=1α:4β:2δ)=0.03×0.0012967lik(1α:5β:2δ)∼Pr(1α:5β:2δ)×Pr(2A/D≈1.324&&2B/D≈4.138|genotype=1α:5β:2δ)=0.0004×0.000019 \\begin{align}   \\textrm{lik}\\left(1\\alpha:3\\beta:2\\delta\\right) &\\sim \\textrm{Pr}\\left(1\\alpha:3\\beta:2\\delta\\right)\\ \\times \\\\   &\\; \\; \\; \\; \\; \\textrm{Pr}\\left(2A/D \\approx 1.324\\ \\&\\&\\ 2B/D \\approx 4.138\\ | \\right. \\\\    &\\; \\; \\; \\; \\; \\; \\; \\; \\; \\; \\; \\left.\\textrm{genotype} = 1\\alpha:3\\beta:2\\delta\\right) \\\\   &= 0.434 \\times 0.0002521 \\\\   \\\\   \\textrm{lik}\\left(1\\alpha:4\\beta:2\\delta\\right) &\\sim \\textrm{Pr}\\left(1\\alpha:4\\beta:2\\delta\\right)\\ \\times \\\\    &\\; \\; \\; \\; \\; \\textrm{Pr}\\left(2A/D \\approx 1.324\\ \\&\\&\\ 2B/D \\approx 4.138\\ | \\right. \\\\    &\\; \\; \\; \\; \\; \\; \\; \\; \\; \\; \\; \\left. \\textrm{genotype} = 1\\alpha:4\\beta:2\\delta\\right) \\\\   &= 0.03 \\times 0.0012967 \\\\   \\\\   \\textrm{lik}\\left(1\\alpha:5\\beta:2\\delta\\right) &\\sim \\textrm{Pr}\\left(1\\alpha:5\\beta:2\\delta\\right)\\ \\times \\\\   &\\; \\; \\; \\; \\; \\textrm{Pr}\\left(2A/D \\approx 1.324\\ \\&\\&\\ 2B/D \\approx 4.138\\ | \\right. \\\\    &\\; \\; \\; \\; \\; \\; \\; \\; \\; \\; \\; \\left. \\textrm{genotype} = 1\\alpha:5\\beta:2\\delta\\right) \\\\   &= 0.0004 \\times 0.000019  \\end{align} posterior probability 1α:3β:2δ1\\alpha:3\\beta:2\\delta genotype estimated 0.434×0.00025210.434×0.0002521+0.03×0.0012967+0.0004×0.000019=0.738 \\frac{0.434 \\times 0.0002521}{0.434 \\times 0.0002521 + 0.03 \\times 0.0012967 + 0.0004 \\times 0.000019} = 0.738 Note estimate (many others) highly sensitive (unknown) prior population frequencies. Pr(data|genotype)\\textrm{Pr}\\left(\\textrm{data}\\ |\\ \\textrm{genotype}\\right) highest 1α:4β:2δ1\\alpha:4\\beta:2\\delta factor 55, swamped low prior allele frequency. Table 1. Prior estimates tryptase genotype frequencies, stratified ancestry: EUR = European, EAS = East Asian, AFR = African, SAS = South Asian","code":"genomes <- TrypLik::tryptase_1KG()  library(ggplot2)  ggplot(genomes, aes(`2A/D`, `2B/D`, col = `Geno Group`)) +     geom_point() +     theme_bw() +     theme(text = element_text(size = 16)) head(tryptase_1KG()) #>   2A/D   2B/D Geno Group #> 1    0 2.9885      0α:4β #> 2    0 3.2629      0α:4β #> 3    0 3.4384      0α:4β #> 4    0 3.4791      0α:4β #> 5    0 3.4792      0α:4β #> 6    0 3.5294      0α:4β tail(tryptase_1KG()) #>       2A/D   2B/D      Geno Group #> 498 3.3934 2.1381 everything else #> 499 3.5198 2.6565 everything else #> 500 3.6170 2.0479 everything else #> 501 3.6826 2.3413 everything else #> 502 3.6910 2.1691 everything else #> 503 3.9388 1.9878 everything else"},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"Tryptase region consensus alignments different alleles, using numbering Maun et al., 2019 Green text = cDNA sequence potentially incorrect Red highlight = fixed difference delta (alpha + beta) Yellow highlight = polymorphic within alpha + beta, can used discriminate alpha &/beta alleles Grey highlight = polymorphic within specific allele/gene","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"bases-1050-1149","dir":"Articles","previous_headings":"Appendix","what":"Bases 1050 – 1149","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"beta3FS location colored pink [–/C]","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"bases-1550-1649","dir":"Articles","previous_headings":"Appendix","what":"Bases 1550 – 1649","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"Alignment near putative functional alpha/beta mutation green (cf. Maun et al., 2019 supplement)","code":""},{"path":[]},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"citing-tryplik","dir":"Articles","previous_headings":"Appendix","what":"Citing TrypLik","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"hope TrypLik useful research. Please use following information cite package overall approach. Thank !","code":"## Citation info citation(\"TrypLik\") #> To cite package 'TrypLik' in publications use: #>  #>   Carroll J, Wall J (2024). _TrypLik: Calculates Tryptase Variant #>   Likelihoods_. R package version 0.1.0, #>   <https://hibio.github.io/TrypLik/>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {TrypLik: Calculates Tryptase Variant Likelihoods}, #>     author = {Jonathan Carroll and Jeff Wall}, #>     year = {2024}, #>     note = {R package version 0.1.0}, #>     url = {https://hibio.github.io/TrypLik/}, #>   }"},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"reproducibility","dir":"Articles","previous_headings":"","what":"Reproducibility","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"TrypLik package Carroll et al., 2024 made possible thanks : R R Core Team, 2024 BiocStyle Oleś, 2024 biocthis Collado-Torres, 2024 knitr Xie, 2024 RefManageR McLean, 2017 rmarkdown Allaire et al., 2024","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"vignette generated using BiocStyle Oleś, 2024 knitr Xie, 2024 rmarkdown Allaire et al., 2024 running behind scenes. Citations made RefManageR McLean, 2017. [1] J. Allaire, Y. Xie, C. Dervieux, et al. rmarkdown: Dynamic Documents R. R package version 2.27. 2024. URL: https://github.com/rstudio/rmarkdown. [2] J. Carroll J. Wall. TrypLik: Calculates Tryptase Variant Likelihoods. R package version 0.1.0. 2024. URL: https://hibio.github.io/TrypLik/. [3] M. B. Chollet, . Kovalszki, C. Akin. “novel case beta-tryptase/TPSB2 allele duplication”. : Journal Allergy Clinical Immunology 147(2) supplement (2021). DOI: 10.1016/j.jaci.2020.12.491. [4] Chovanec. “Unpublished data”. TBA. 2022. [5] L. Collado-Torres. Automate package project setup Bioconductor packages. https://github.com/lcolladotor/biocthisbiocthis - R package version 1.14.0. 2024. DOI: 10.18129/B9.bioc.biocthis. URL: http://www.bioconductor.org/packages/biocthis. [6] S. C. Glover, . Carlyle, J. J. Lyons. “Hereditary alpha-tryptasemia despite normal tryptase-encoding gene copy number owing copy number loss trans”. : Annals Allergy, Asthma & Immunology 128(4) (2022), pp. 460-461. DOI: 10.1016/j.anai.2021.12.008. [7] J. J. Lyons et al. “Elevated basal serum tryptase identifies multisystem disorder associated increased TPSAB1 copy number.” : Nat Genet. 48(12) (2016), pp. 1564-1569. DOI: doi:10.1038/ng.3696. [8] H. R. Maun et al. “Allosteric Anti-tryptase Antibody Treatment Mast Cell-Mediated Severe Asthma”. : Cell 179(2) (2019), pp. 417-431. DOI: doi:10.1016/j.cell.2019.09.009. [9] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [10] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.32.1. 2024. DOI: 10.18129/B9.bioc.BiocStyle. URL: https://bioconductor.org/packages/BiocStyle. [11] R Core Team. R: Language Environment Statistical Computing. R Foundation Statistical Computing. Vienna, Austria, 2024. URL: https://www.R-project.org/. [12] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.48. 2024. URL: https://yihui.org/knitr/.","code":""},{"path":"https://hibio.github.io/TrypLik/articles/TrypLik.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Estimating Tryptase Copy Numbers from Sequence Data","text":"","code":"utils::sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.5.1    TrypLik_0.1.0    RefManageR_1.4.0 BiocStyle_2.32.1 #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.9          utf8_1.2.4          generics_0.1.3      #>  [4] xml2_1.3.6          stringi_1.8.4       digest_0.6.36       #>  [7] magrittr_2.0.3      evaluate_0.24.0     grid_4.4.1          #> [10] timechange_0.3.0    bookdown_0.40       fastmap_1.2.0       #> [13] plyr_1.8.9          jsonlite_1.8.8      backports_1.5.0     #> [16] BiocManager_1.30.23 httr_1.4.7          fansi_1.0.6         #> [19] scales_1.3.0        bibtex_0.5.1        textshaping_0.4.0   #> [22] jquerylib_0.1.4     cli_3.6.3           rlang_1.1.4         #> [25] munsell_0.5.1       withr_3.0.1         cachem_1.1.0        #> [28] yaml_2.3.10         tools_4.4.1         colorspace_2.1-1    #> [31] vctrs_0.6.5         R6_2.5.1            lifecycle_1.0.4     #> [34] lubridate_1.9.3     stringr_1.5.1       fs_1.6.4            #> [37] ragg_1.3.2          pkgconfig_2.0.3     desc_1.4.3          #> [40] pkgdown_2.1.0       pillar_1.9.0        bslib_0.8.0         #> [43] gtable_0.3.5        glue_1.7.0          Rcpp_1.0.13         #> [46] systemfonts_1.1.0   xfun_0.46           tibble_3.2.1        #> [49] highr_0.11          knitr_1.48          farver_2.1.2        #> [52] htmltools_0.5.8.1   rmarkdown_2.27      labeling_0.4.3      #> [55] compiler_4.4.1"},{"path":"https://hibio.github.io/TrypLik/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonathan Carroll. Author, maintainer. Jeff Wall. Author. Human Immunology Biosciences (HI·Bio). Copyright holder, funder.","code":""},{"path":"https://hibio.github.io/TrypLik/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carroll J, Wall J (2024). TrypLik: Calculates Tryptase Variant Likelihoods. R package version 0.1.0, https://hibio.github.io/TrypLik/.","code":"@Manual{,   title = {TrypLik: Calculates Tryptase Variant Likelihoods},   author = {Jonathan Carroll and Jeff Wall},   year = {2024},   note = {R package version 0.1.0},   url = {https://hibio.github.io/TrypLik/}, }"},{"path":"https://hibio.github.io/TrypLik/index.html","id":"tryplik","dir":"","previous_headings":"","what":"Calculates Tryptase Variant Likelihoods","title":"Calculates Tryptase Variant Likelihoods","text":"goal TrypLik support tryptase copy number estimation sequence data.","code":""},{"path":"https://hibio.github.io/TrypLik/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"Calculates Tryptase Variant Likelihoods","text":"Get latest stable R release CRAN. Install development version GitHub : , using Bioconductor ecosystem:","code":"BiocManager::install(\"HIBio/TrypLik\") remotes::install_github(\"HIBio/TrypLik\")"},{"path":"https://hibio.github.io/TrypLik/index.html","id":"preprocessing","dir":"","previous_headings":"","what":"Preprocessing","title":"Calculates Tryptase Variant Likelihoods","text":"Provided sequencing data processed (see background vignette included package, accompanying shell scripts inst/) produce reads mapped specific tryptase alleles, can provided TrypLik function function R wrapper C function, producing native data.frame. C code provided standalone source file inst/tryplik.c R-related code commented . R wrapper uses file src/tryplik.c differs additional R components. compiled, standalone version can used command-line pipeline; following processing outlined background vignette, one use processing can entirely performed R, provided samtools bwa installed. preprocess file HG00100.final.cram 1000 Genomes, producing .sam file suitable counting (TrypLik function takes either single vector counts values provided specific arguments).","code":"library(\"TrypLik\")  TrypLik(26, 0, 347, 316, 304) #>   Alpha_count Beta_count Beta_FS_count Posterior_likelihood #> 1           2          2             0              0.99890 #> 2           2          3             0              0.00008 #> 3           3          2             0              0.00082 #> 4           3          3             0              0.00020 [...] samtools markdup -r positionsort.sam temp.sam ./count_tryptase >> tryptase.out  cat tryptase.out | awk '{printf \"./Tryplik %d %d %d %d %d | sort -nk2 | tail -n 1\\n\", $6, $7, $8, $9, $10}' sam_file <- preprocess(\"HG00100.final.cram\") # Processing... this may take some time # [bwa_index] Pack FASTA... 0.00 sec # [bwa_index] Construct BWT for the packed sequence... # [bwa_index] 0.00 seconds elapse. # [bwa_index] Update BWT... 0.00 sec # [bwa_index] Pack forward-only FASTA... 0.00 sec # [bwa_index] Construct SA from BWT and Occ... 0.00 sec # [main] Version: 0.7.17-r1188 # [main] CMD: bwa index consensus.fa # [main] Real time: 0.004 sec; CPU: 0.004 sec # [M::bam2fq_mainloop] discarded 228 singletons # [M::bam2fq_mainloop] processed 27228 reads # [M::bwa_idx_load_from_disk] read 0 ALT contigs # [M::process] read 27000 sequences (4050000 bp)... # [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 1190, 0, 0) # [M::mem_pestat] skip orientation FF as there are not enough pairs # [M::mem_pestat] analyzing insert size distribution for orientation FR... # [M::mem_pestat] (25, 50, 75) percentile: (348, 429, 530) # [M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 894) # [M::mem_pestat] mean and std.dev: (422.49, 140.29) # [M::mem_pestat] low and high boundaries for proper pairs: (1, 1076) # [M::mem_pestat] skip orientation RF as there are not enough pairs # [M::mem_pestat] skip orientation RR as there are not enough pairs # [M::mem_process_seqs] Processed 27000 reads in 1.101 CPU sec, 1.064 real sec # [main] Version: 0.7.17-r1188 # [main] CMD: bwa mem consensus.fa tempR1.fastq tempR2.fastq # [main] Real time: 1.097 sec; CPU: 1.133 sec # result file temp.sam is here: temp.sam  sam_file # [1] \"temp.sam\"  counts <- count_tryptase(sam_file) counts # [1]  24   0  22   0  26   0 347 316 304  TrypLik(counts) #   Alpha_count Beta_count Beta_FS_count Posterior_likelihood # 1           2          2             0              0.99890 # 2           2          3             0              0.00008 # 3           3          2             0              0.00082 # 4           3          3             0              0.00020"},{"path":"https://hibio.github.io/TrypLik/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Calculates Tryptase Variant Likelihoods","text":"citation output using citation('TrypLik') R. Please run check updates cite TrypLik. Please note TrypLik made possible thanks many R bioinformatics software authors, cited either vignettes /paper(s) describing package.","code":"print(citation(\"TrypLik\"), bibtex = TRUE) #> Warning in citation(\"TrypLik\"): no date field in DESCRIPTION file of package #> 'TrypLik' #> Warning in citation(\"TrypLik\"): could not determine year for 'TrypLik' from #> package DESCRIPTION file #>  #> To cite package 'TrypLik' in publications use: #>  #>   Carroll J, Wall J (????). _TrypLik: Calculates Tryptase Variant #>   Likelihoods_. R package version 0.1.0. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {TrypLik: Calculates Tryptase Variant Likelihoods}, #>     author = {Jonathan Carroll and Jeff Wall}, #>     note = {R package version 0.1.0}, #>   }"},{"path":"https://hibio.github.io/TrypLik/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Calculates Tryptase Variant Likelihoods","text":"Please note TrypLik project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://hibio.github.io/TrypLik/index.html","id":"development-tools","dir":"","previous_headings":"","what":"Development tools","title":"Calculates Tryptase Variant Likelihoods","text":"Package development possible thanks usethis, remotes, rcmdcheck customized use Bioconductor’s docker containers BiocCheck. documentation website automatically updated thanks pkgdown. code styled automatically thanks styler. documentation formatted thanks devtools roxygen2. package developed using biocthis.","code":""},{"path":"https://hibio.github.io/TrypLik/reference/TrypLik-package.html","id":null,"dir":"Reference","previous_headings":"","what":"TrypLik: Calculates Tryptase Variant Likelihoods — TrypLik-package","title":"TrypLik: Calculates Tryptase Variant Likelihoods — TrypLik-package","text":"Calculates tryptase variant (alpha, beta) likelihoods based counts using wrapped C method. Preprocessing cram files provided bash scripts R wrappers. detailed description method employed provided vignette. Contact HIBio learn tryptase program services provided.","code":""},{"path":[]},{"path":"https://hibio.github.io/TrypLik/reference/TrypLik-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TrypLik: Calculates Tryptase Variant Likelihoods — TrypLik-package","text":"Maintainer: Jonathan Carroll rpkg@jcarroll.com.au (ORCID) Authors: Jeff Wall jeffwall.genetics@gmail.com contributors: Human Immunology Biosciences (HI·Bio) [copyright holder, funder]","code":""},{"path":"https://hibio.github.io/TrypLik/reference/TrypLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tryptase Variant Likelihoods — TrypLik","title":"Calculate Tryptase Variant Likelihoods — TrypLik","text":"Calculate Tryptase Variant Likelihoods","code":""},{"path":"https://hibio.github.io/TrypLik/reference/TrypLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tryptase Variant Likelihoods — TrypLik","text":"","code":"TrypLik(wt, fs, areads, breads, dreads, pop = 0)"},{"path":"https://hibio.github.io/TrypLik/reference/TrypLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tryptase Variant Likelihoods — TrypLik","text":"wt wildtype fs frameshift areads alpha counts breads beta counts dreads delta counts pop population use (0=EUR, 1=AFR, 2=EAS, 3=SAS) either number character string","code":""},{"path":"https://hibio.github.io/TrypLik/reference/TrypLik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tryptase Variant Likelihoods — TrypLik","text":"data.frame containing probabilities relevant likelihoods","code":""},{"path":"https://hibio.github.io/TrypLik/reference/TrypLik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Tryptase Variant Likelihoods — TrypLik","text":"","code":"# as individual arguments TrypLik(26, 0, 347, 316, 304, pop = 0) #>   Alpha_count Beta_count Beta_FS_count Posterior_likelihood #> 1           2          2             0              0.99890 #> 2           2          3             0              0.00008 #> 3           3          2             0              0.00082 #> 4           3          3             0              0.00020  # as a `counts` vector TrypLik(c(26, 0, 347, 316, 304), pop = 0) #>   Alpha_count Beta_count Beta_FS_count Posterior_likelihood #> 1           2          2             0              0.99890 #> 2           2          3             0              0.00008 #> 3           3          2             0              0.00082 #> 4           3          3             0              0.00020  # as the output of `preprocess` TrypLik(c(24, 0, 22, 0, 26, 0, 347, 316, 304), pop = 0) #>   Alpha_count Beta_count Beta_FS_count Posterior_likelihood #> 1           2          2             0              0.99890 #> 2           2          3             0              0.00008 #> 3           3          2             0              0.00082 #> 4           3          3             0              0.00020"},{"path":"https://hibio.github.io/TrypLik/reference/count_tryptase.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Tryptase Alleles in a .sam File — count_tryptase","title":"Count Tryptase Alleles in a .sam File — count_tryptase","text":"Count Tryptase Alleles .sam File","code":""},{"path":"https://hibio.github.io/TrypLik/reference/count_tryptase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Tryptase Alleles in a .sam File — count_tryptase","text":"","code":"count_tryptase(sam_file)"},{"path":"https://hibio.github.io/TrypLik/reference/count_tryptase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Tryptase Alleles in a .sam File — count_tryptase","text":"sam_file path temp.sam file generated pre-processing","code":""},{"path":"https://hibio.github.io/TrypLik/reference/count_tryptase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Tryptase Alleles in a .sam File — count_tryptase","text":"vector counts suitable input TrpLik. See Details.","code":""},{"path":"https://hibio.github.io/TrypLik/reference/count_tryptase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count Tryptase Alleles in a .sam File — count_tryptase","text":"first four values numbers reads mapping uniquely ⍺, βI, βII βIII alleles specific 83 bp region four alleles can distinguished . next two numbers reads map uniquely β ‘wildtype’ (.e. frameshifted) β frameshifted sequences. final three numbers reads can uniquely mapped ⍺, β, δ alleles respectively.","code":""},{"path":"https://hibio.github.io/TrypLik/reference/count_tryptase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Tryptase Alleles in a .sam File — count_tryptase","text":"","code":"if (FALSE) { # \\dontrun{ count_tryptase(\"temp.sam\") } # }"},{"path":"https://hibio.github.io/TrypLik/reference/genomes.html","id":null,"dir":"Reference","previous_headings":"","what":"1000 Genomes Tryptase Data — genomes","title":"1000 Genomes Tryptase Data — genomes","text":"subset 503 samples 1000 Genomes Project, processed tryptase allele counts. See background vignette TrypLik additional details.","code":""},{"path":"https://hibio.github.io/TrypLik/reference/genomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"1000 Genomes Tryptase Data — genomes","text":"","code":"data(genomes)"},{"path":[]},{"path":"https://hibio.github.io/TrypLik/reference/genomes.html","id":"genomes","dir":"Reference","previous_headings":"","what":"genomes","title":"1000 Genomes Tryptase Data — genomes","text":"data frame 503 rows 3 columns: 2A/D double ratio alpha delta alleles 2B/D double ratio beta delta alleles Geno Group Genotype classification group","code":""},{"path":"https://hibio.github.io/TrypLik/reference/genomes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"1000 Genomes Tryptase Data — genomes","text":"https://www.internationalgenome.org/1000-genomes-summary/","code":""},{"path":"https://hibio.github.io/TrypLik/reference/genomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"1000 Genomes Tryptase Data — genomes","text":"","code":"data(genomes) head(genomes) #>   2A/D   2B/D Geno Group #> 1    0 2.9885      0α:4β #> 2    0 3.2629      0α:4β #> 3    0 3.4384      0α:4β #> 4    0 3.4791      0α:4β #> 5    0 3.4792      0α:4β #> 6    0 3.5294      0α:4β"},{"path":"https://hibio.github.io/TrypLik/reference/preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Run preprocessing script — preprocess","title":"Run preprocessing script — preprocess","text":"Run preprocessing script","code":""},{"path":"https://hibio.github.io/TrypLik/reference/preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run preprocessing script — preprocess","text":"","code":"preprocess(   cram_file,   output_dir = dirname(cram_file),   consensus_dir = system.file(package = \"TrypLik\"),   nthreads = 8 )"},{"path":"https://hibio.github.io/TrypLik/reference/preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run preprocessing script — preprocess","text":"cram_file file path .cram file processed","code":""},{"path":"https://hibio.github.io/TrypLik/reference/preprocess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run preprocessing script — preprocess","text":"produces temp.sam file","code":""},{"path":"https://hibio.github.io/TrypLik/reference/preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run preprocessing script — preprocess","text":"","code":"tryCatch(preprocess(\"missing_file.cram\"), error = function(e) e) #> <simpleError in preprocess(\"missing_file.cram\"): file.exists(cram_file) is not TRUE>  if (FALSE) { # \\dontrun{ preprocess(\"HG00100.final.cram\") } # }"},{"path":"https://hibio.github.io/TrypLik/reference/select_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a genetic-ancestry population — select_population","title":"Select a genetic-ancestry population — select_population","text":"Select genetic-ancestry population","code":""},{"path":"https://hibio.github.io/TrypLik/reference/select_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a genetic-ancestry population — select_population","text":"","code":"select_population(pop = NULL)"},{"path":"https://hibio.github.io/TrypLik/reference/select_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a genetic-ancestry population — select_population","text":"pop population use (0=EUR, 1=AFR, 2=EAS, 3=SAS) either number character string","code":""},{"path":"https://hibio.github.io/TrypLik/reference/select_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a genetic-ancestry population — select_population","text":"named integer mapping population name index","code":""},{"path":"https://hibio.github.io/TrypLik/reference/select_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a genetic-ancestry population — select_population","text":"","code":"# by index select_population(pop = 0) #> EUR  #>   0   # by name select_population(pop = \"EUR\") #> EUR  #>   0"},{"path":"https://hibio.github.io/TrypLik/reference/tryptase_1KG.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the 1000 Genomes data, processed for tryptase allele counts — tryptase_1KG","title":"Retrieve the 1000 Genomes data, processed for tryptase allele counts — tryptase_1KG","text":"See background vignette TrypLik additional details.","code":""},{"path":"https://hibio.github.io/TrypLik/reference/tryptase_1KG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the 1000 Genomes data, processed for tryptase allele counts — tryptase_1KG","text":"","code":"tryptase_1KG()"},{"path":"https://hibio.github.io/TrypLik/reference/tryptase_1KG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the 1000 Genomes data, processed for tryptase allele counts — tryptase_1KG","text":"data.frame 2A/D, 2B/D, inferred genotype group 503 relevant samples","code":""},{"path":"https://hibio.github.io/TrypLik/reference/tryptase_1KG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the 1000 Genomes data, processed for tryptase allele counts — tryptase_1KG","text":"","code":"head(tryptase_1KG()) #>   2A/D   2B/D Geno Group #> 1    0 2.9885      0α:4β #> 2    0 3.2629      0α:4β #> 3    0 3.4384      0α:4β #> 4    0 3.4791      0α:4β #> 5    0 3.4792      0α:4β #> 6    0 3.5294      0α:4β"},{"path":"https://hibio.github.io/TrypLik/news/index.html","id":"tryplik-010","dir":"Changelog","previous_headings":"","what":"TrypLik 0.1.0","title":"TrypLik 0.1.0","text":"Initial package development release","code":""}]
